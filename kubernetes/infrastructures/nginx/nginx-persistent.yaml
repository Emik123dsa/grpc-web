apiVersion: v1
kind: Service
metadata:
  namespace: nginx
  name: nginx-persistent-svc
  labels:
    app: nginx-persistent
    tier: nginx
    role: persistent
spec:
  selector:
    app: nginx-persistent
    tier: nginx
    role: persistent
  ports:
    - port: 80
      targetPort: 80
      name: nginx
      protocol: TCP
  type: LoadBalancer
  externalTrafficPolicy: Cluster # Local
  # clusterIP: None
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nginx
  name: nginx-persistent-deployment
  labels:
    app: nginx-persistent
    tier: nginx
    role: persistent
spec:
  minReadySeconds: 2
  replicas: 4
  progressDeadlineSeconds: 20
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: nginx-persistent
      tier: nginx
      role: persistent
  template:
    metadata:
      labels:
        app: nginx-persistent
        tier: nginx
        role: persistent
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 30
      volumes:
        - name: nginx-log-pvc-volume
          emptyDir:
            medium: Memory
            sizeLimit: 12Gi
        - name: nginx-data-pvc-volume
          persistentVolumeClaim:
            claimName: nginx-pvc-volume
      containers:
        - name: nginx
          tty: true
          image: nginx:latest
          imagePullPolicy: Always
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          # securityContext:
          #   runAsUser: 1001
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   failureThreshold: 6
          #   initialDelaySeconds: 30
          #   periodSecotends: 10
          #   successThreshold: 1
          #   timeoutSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   failureThreshold: 6
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 5
          ports:
            - name: nginx
              containerPort: 80
              protocol: TCP
          envFrom:
            - configMapRef:
                name: nginx-config
          env:
            - name: NGINX_CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NGINX_CLUSTER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NGINX_CLUSTER_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NGINX_CLUSTER_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NGINX_CLUSTER_POD_IPS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIPs
          volumeMounts:
            - mountPath: /var/log/nginx/
              name: nginx-log-pvc-volume
            - mountPath: /usr/share/nginx/html/
              name: nginx-data-pvc-volume
          resources:
            limits:
              memory: 512Mi
              cpu: 400m
            requests:
              memory: 256Mi
              cpu: 250m
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: Exists
              weight: 100
status: {}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-persistent-hpa
  namespace: nginx
  labels:
    app: nginx-persistent
    tier: nginx
    role: persistent
spec:
  maxReplicas: 8
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1beta
    kind: Deployment
    name: nginx-persistent-deployment
  targetCPUUtilizationPercentage: 75
